/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface ServerCoin {
  coin: Coin
  p2PuzzleHash: Uint8Array
  memoUrls: Array<string>
}
export interface Coin {
  parentCoinInfo: Uint8Array
  puzzleHash: Uint8Array
  amount: number
}
export class Tls {
  constructor(certPath: string, keyPath: string)
}
export class Peer {
  static connect(nodeUri: string, networkId: string, tls: Tls): Promise<Peer>
  fetchServerCoins(launcherId: Uint8Array, count: number): Promise<Array<ServerCoin>>
}
export class Wallet {
  static initialSync(peer: Peer, mnemonic: string, aggSigMe: Uint8Array): Promise<Wallet>
  derivationIndex(): Promise<number>
  createServerCoin(launcherId: Uint8Array, amount: number, fee: number, urls: Array<string>): Promise<boolean>
  deleteServerCoins(coins: Array<Coin>, fee: number): Promise<boolean>
}
